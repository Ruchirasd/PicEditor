
import com.sun.scenario.effect.Glow;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.imageio.*;
import javax.swing.JPanel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Ruchira
 */
public class PicEditorGUI extends javax.swing.JFrame {

    /**
     * Creates new form PicEditorGUI
     */
    public PicEditorGUI() {
        initComponents();

    }

    private javax.swing.JFileChooser filechooser = new javax.swing.JFileChooser();
    File file = null;
    public String path = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        picPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        label = new javax.swing.JLabel();
        actionPanel = new javax.swing.JPanel();
        addPic = new javax.swing.JButton();
        greyScale = new javax.swing.JButton();
        downSample = new javax.swing.JButton();
        upSample = new javax.swing.JButton();
        getDistortion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        picPanel.setName("picPanel"); // NOI18N

        jScrollPane1.setViewportView(label);

        javax.swing.GroupLayout picPanelLayout = new javax.swing.GroupLayout(picPanel);
        picPanel.setLayout(picPanelLayout);
        picPanelLayout.setHorizontalGroup(
            picPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
        );
        picPanelLayout.setVerticalGroup(
            picPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        addPic.setText("Add Pic");
        addPic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPicActionPerformed(evt);
            }
        });

        greyScale.setText("Grey Scale");
        greyScale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greyScaleActionPerformed(evt);
            }
        });

        downSample.setText("Down Sample");
        downSample.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downSampleActionPerformed(evt);
            }
        });

        upSample.setText("Up Sample");
        upSample.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upSampleActionPerformed(evt);
            }
        });

        getDistortion.setText("Get Distortion");

        javax.swing.GroupLayout actionPanelLayout = new javax.swing.GroupLayout(actionPanel);
        actionPanel.setLayout(actionPanelLayout);
        actionPanelLayout.setHorizontalGroup(
            actionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, actionPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addPic)
                .addGap(35, 35, 35))
            .addGroup(actionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(actionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(greyScale)
                    .addComponent(downSample)
                    .addComponent(upSample)
                    .addComponent(getDistortion))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        actionPanelLayout.setVerticalGroup(
            actionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actionPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(addPic)
                .addGap(18, 18, 18)
                .addComponent(greyScale)
                .addGap(18, 18, 18)
                .addComponent(downSample)
                .addGap(18, 18, 18)
                .addComponent(upSample)
                .addGap(18, 18, 18)
                .addComponent(getDistortion)
                .addContainerGap(210, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(picPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(actionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(picPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(actionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addPicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPicActionPerformed
        // TODO add your handling code here:
        BufferedImage image;
        try {
            int returnVal = filechooser.showOpenDialog(this);
            if (returnVal == filechooser.APPROVE_OPTION) {
                file = filechooser.getSelectedFile();
                path = file.getAbsolutePath();
                image = ImageIO.read(file);
                label.setIcon(new ImageIcon(image));
                label.setHorizontalAlignment(JLabel.CENTER);
                label.setVerticalAlignment(JLabel.CENTER);
//                picPanel.revalidate();
//                picPanel.repaint();
                System.out.println("done");
            }
        } catch (IOException ex) {
            Logger.getLogger(PicEditorGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_addPicActionPerformed

    private void greyScaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greyScaleActionPerformed
        try {
            // TODO add your handling code here:
            GreyScale gc = new GreyScale();
            System.out.println(path);
            gc.convertToGreyScale(path, 0);
            File file = new File("2-GreyScaled/Grey.png");
            BufferedImage image = ImageIO.read(file);
            label.setIcon(new ImageIcon(image));
            label.setHorizontalAlignment(JLabel.CENTER);
            label.setVerticalAlignment(JLabel.CENTER);
            picPanel.repaint();
        } catch (IOException ex) {
            Logger.getLogger(PicEditorGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_greyScaleActionPerformed

    private void downSampleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downSampleActionPerformed
        // TODO add your handling code here:
        DownSample ds = new DownSample();
        try {
            ds.downSamplePic(path, 0);
            File file = new File("3-DownSampled/DownSampled.png");
            BufferedImage image = ImageIO.read(file);
            label.setIcon(new ImageIcon(image));
            label.setHorizontalAlignment(JLabel.CENTER);
            label.setVerticalAlignment(JLabel.CENTER);
            picPanel.repaint();
        } catch (IOException ex) {
            Logger.getLogger(PicEditorGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_downSampleActionPerformed

    private void upSampleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upSampleActionPerformed
        // TODO add your handling code here:
        UpSample us = new UpSample();
        try {
            us.upSamplePic(path, 0);
            File file = new File("3-UpSampled/UpSampled.png");
            BufferedImage image = ImageIO.read(file);
            label.setIcon(new ImageIcon(image));
            label.setHorizontalAlignment(JLabel.CENTER);
            label.setVerticalAlignment(JLabel.CENTER);
            picPanel.repaint();
        } catch (IOException ex) {
            Logger.getLogger(PicEditorGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_upSampleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PicEditorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PicEditorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PicEditorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PicEditorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new PicEditorGUI().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionPanel;
    private javax.swing.JButton addPic;
    private javax.swing.JButton downSample;
    private javax.swing.JButton getDistortion;
    private javax.swing.JButton greyScale;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label;
    private javax.swing.JPanel picPanel;
    private javax.swing.JButton upSample;
    // End of variables declaration//GEN-END:variables
}
